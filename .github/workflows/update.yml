name: Update datasets (Risk + Macro)

on:
  schedule:
    - cron: "0 2 * * 6"    # Sat 02:00 UTC
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update-risk:
    name: Update Risk Regime Dataset
    runs-on: ubuntu-latest

    steps:
      - name: Kickoff marker
        run: echo "Runner started for update-risk ✅"

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Show requirements (debug)
        run: cat requirements.txt || true

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Show versions
        run: |
          python - << 'PY'
          import sys
          print("Python:", sys.version)
          try:
            import yfinance, pandas, numpy
            print("yfinance:", yfinance.__version__)
            print("pandas  :", pandas.__version__)
            print("numpy   :", numpy.__version__)
          except Exception as e:
            print("Import error:", e)
          PY

      - name: Run risk regime update
        run: python src/compute_risk.py

      - name: Commit updated risk dataset
        run: |
          git config user.name github-actions
          git config user.email actions@github.com
          git add risk_weekly_history.csv
          git commit -m "Update risk_weekly_history" || echo "No changes"
          git push

  update-macro:
    name: Update Macro Dataset
    runs-on: ubuntu-latest
    needs: update-risk

    steps:
      - name: Kickoff marker
        run: echo "Runner started for update-macro ✅"

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set FRED key (optional)
        if: ${{ secrets.FRED_API_KEY != '' }}
        run: echo "FRED_API_KEY=${{ secrets.FRED_API_KEY }}" >> $GITHUB_ENV

      - name: Test FRED connection (non-blocking)
        continue-on-error: true
        run: |
          python - << 'PY'
          from pandas_datareader import data as pdr
          for c in ["NAPM","USSLIND","T10Y3M"]:
              df = pdr.DataReader(c, "fred", start="1990-01-01")
              print(c, "rows:", len(df))
          PY

      - name: Run macro update
        run: python src/compute_macro.py

      - name: Commit updated macro dataset
        run: |
          git config user.name github-actions
          git config user.email actions@github.com
          git add macro_history.csv
          git commit -m "Update macro_history" || echo "No changes"
          git push