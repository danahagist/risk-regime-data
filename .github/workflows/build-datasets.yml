name: Build monthly datasets (FRED)

on:
  workflow_dispatch:
  schedule:
    # Run daily at 12:05 UTC to pick up new FRED prints; scripts write by month-start date
    - cron: "5 12 * * *"

permissions:
  contents: write

concurrency:
  group: build-datasets
  cancel-in-progress: false

jobs:
  compute:
    runs-on: ubuntu-latest
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # minimal deps fallback
            pip install pandas fredapi
          fi

      - name: Compute Macro (monthly)
        env:
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          python src/compute_macro_monthly.py

      - name: Compute Risk (monthly)
        env:
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          python src/compute_risk_monthly.py

      - name: Commit and push changes (if any)
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # Show what changed in data/
          git status --porcelain data/ || true
          # Only commit if something changed under data/
          if [ -n "$(git status --porcelain data/)" ]; then
            git add data/
            git commit -m "Update monthly datasets [skip ci]"
            git push
            echo "Changes pushed."
          else
            echo "No changes to commit."
          fi